@page "/edit-usuario"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Forms
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
<style>
    .registro-container {
    max-width: 500px;
    margin: 20px auto;
    padding: 20px;
    background: white;
    border-radius: 10px;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    text-align: center;
    font-family: Arial, sans-serif;
    }

    .btn-back {
    background: none;
    border: none;
    font-size: 16px;
    cursor: pointer;
    color: #555;
    margin-bottom: 10px;
    }

    h2 {
    font-size: 28px;
    color: #7D3C98;
    margin-bottom: 20px;
    }

    .registro-form {
    display: flex;
    flex-direction: column;
    text-align: left;
    padding: 15px;
    border: 2px solid #7D3C98;
    border-radius: 8px;
    }

    label {
    font-weight: bold;
    margin-top: 10px;
    }

    input {
    width: 100%;
    padding: 10px;
    margin-top: 5px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
    }

    .error {
    border: 2px solid red;
    background-color: #ffe6e6;
    }

    .error-message {
    color: red;
    font-size: 12px;
    margin-top: 5px;
    }

    .password-box {
    border: 2px solid blue;
    }

    .btn-registrarse {
    background: #7D3C98;
    color: white;
    border: none;
    padding: 10px;
    border-radius: 5px;
    cursor: pointer;
    margin-top: 15px;
    font-size: 18px;
    }

    .social-login {
    margin-top: 15px;
    }

    .btn-social {
    border: none;
    background: none;
    font-size: 24px;
    margin: 0 10px;
    cursor: pointer;
    }

    .google {
    color: #db4437;
    }

    .facebook {
    color: #3b5998;
    }
</style>

@if (Usuario != null)
{
	<h1>Crear Usuario</h1>
}
else
{
    <p>Cargando...</p>
}
<EditForm Model="Usuario" OnValidSubmit="HandleSubmit">
    <div>
        <label for="nombre">Nombre Completo:</label>
        <InputText id="nokmbre" @bind-value="Usuario.NombreCompleto" class="form-control" />
    </div>
    <div>
        <label for="Edad">Edad:</label>
        <InputNumber id="Edad" @bind-Value="Usuario.Edad" class="form-control" />
    </div>
	<div>
		<label for="Genero">Genero:</label>
		<InputText id="Genero" @bind-Value="Usuario.Genero" class="form-control" />
	</div>
    <div>
        <label for="Correo">Correo:</label>
        <InputText id="Correo" @bind-Value="Usuario.Correo" class="form-control" />
    </div>
    <div>
        <label for="Contrasseña">Contraseña:</label>
        <InputText id="Contrasseña" @bind-Value="Usuario.Contraseña" class="form-control" />
    </div>
	<button type="submit" class="btn-registrarse">Registrarse</button>
	<div class="social-login">
		<p>o Ingresa Con</p>
		<button class="btn-social google">G</button>
		<button class="btn-social facebook">f</button>
	</div>
</EditForm>
@code {
    [Parameter]
    public int? Id { get; set; }
    public Usuario Usuario { get; set; } = new Usuario();
    public string? CorreoError { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            Usuario = new Usuario(); // Inicializa un nuevo usuario si Id es nulo
        }
        else
        {
            await LoadUsuario(); // Carga el usuario si Id no es nulo
        }
    }

    private async Task LoadUsuario() => Usuario = await Http.GetFromJsonAsync<Usuario>($"api/usuario/{Id}") ?? new Usuario();

    private async Task HandleSubmit()
    {
        if (Id == null)
        {
            var result = await Http.PostAsJsonAsync("api/usuario", Usuario);
            if (result.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/");
            }
        }
        else
        {
            var result = await Http.PutAsJsonAsync($"api/usuario/{Id}", Usuario);
            if (result.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/");
            }
        }
    }
}